version: '3.4'

x-common-variables: &common-variables
    SQLALCHEMY_DATABASE_URI: mysql+pymysql://authdb:f9mqwdNJuqSJFSqT@database/authdb
    FLASK_APP: application:create_app
    FLASK_ENV: development
    APP_CONFIG: config.Config
    UPLOAD_FOLDER: "/uploads"
    # comentar si no son necesarios
    HTTP_PROXY: "http://192.168.2.2:3128"
    HTTPS_PROXY: "http://192.168.2.2:3128"
    FTP_PROXY: "http://192.168.2.2:3128"
    NO_PROXY: "intranet.adelante.lan,*.adelante.lan,.adelante.lan"
    http_proxy: "http://192.168.2.2:3128"
    https_proxy: "http://192.168.2.2:3128"
    ftp_proxy: "http://192.168.2.2:3128"
    no_proxy: "intranet.adelante.lan,*.adelante.lan,.adelante.lan"
    DEFAULT_VOL_SIZE: 107374182400
    DEFAULT_MEDIA_SIZE: 4831838208
    CELERY_BROKER_URL: 'redis://redis:6379'
    CELERY_ENABLED: 'true'
    INDEX_BASE_DIR: "/indices"

services: 

    database:
        image: mysql
        restart: always
        environment: 
            MYSQL_ROOT_PASSWORD: sjBf743/dJk
            MYSQL_DATABASE: authdb
            MYSQL_USER: authdb
            MYSQL_PASSWORD: f9mqwdNJuqSJFSqT
        volumes:
            - ./database:/var/lib/mysql

    redis:
        image: redis
        expose: 
            - 6379


    app:
        image: appimage
        build: ./app
        restart: always
        depends_on: 
            - database
            - redis
        command: gunicorn "application:create_app()" --log-level=debug --reload -b 0.0.0.0:5000 --workers=4
        # command: flask run --host=0.0.0.0
        environment: 
            <<: *common-variables
            SECRET_KEY: sjBf743/dJkaut3hdbf9mqwdNJuqSJ4413mdnduhrFSqT
        expose: 
            - 5000
        volumes:
            - ./app:/src
            - ./uploads:/uploads
            - ./search_indices:/indices
        extra_hosts:
            - "intranet.adelante.lan:192.168.2.2"

    app_worker:
        image: appimage
        restart: always
        depends_on: 
            - app
            - redis
        # en produccion ejecutar asi
        # command: celery -A worker.celery worker
        # para desarrollo solamente
        command: watchmedo auto-restart --directory=/src --pattern=*.py --recursive -- celery -A worker.celery worker -l ERROR --concurrency=1
        environment: *common-variables
        expose: 
            - 5000
        volumes:
            - ./app:/src
            - ./uploads:/uploads
            - ./search_indices:/indices
        extra_hosts:
            - "intranet.adelante.lan:192.168.2.2"

    web:
        build: ./nginx
        restart: always
        environment: 
           APP_ENDPOINT: app.local
           APP_PORT: 8080
        ports: 
            - 8080:8080
        depends_on: 
            - app

